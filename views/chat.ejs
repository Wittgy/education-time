<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="utf-8">
    <title>You Chat</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <style>
        body {
            margin-top: 20px;
            background: #eee;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        
        .chat-container {
            height: calc(100vh - 100px);
            border-radius: 10px;
            overflow: hidden;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }
        
        .user-list {
            background: #fff;
            border-right: 1px solid #e0e0e0;
            height: 100%;
            overflow-y: auto;
        }
        
        .chat-area {
            background: #f8f9fa;
            height: 100%;
            display: flex;
            flex-direction: column;
        }
        
        .messages {
            flex: 1;
            overflow-y: auto;
            padding: 20px;
            background: #e5ddd5;
            background-image: url('https://web.whatsapp.com/img/bg-chat-tile-light_a4be512e7195b6b733d9110b408f075d.png');
        }
        
        .message-input {
            background: #f0f0f0;
            padding: 10px;
            border-top: 1px solid #e0e0e0;
        }
        
        .user {
            padding: 10px;
            border-bottom: 1px solid #f0f0f0;
            cursor: pointer;
            transition: background 0.3s;
        }
        
        .user:hover {
            background: #f5f5f5;
        }
        
        .user.active {
            background: #e9ebee;
        }
        
        .message {
            max-width: 70%;
            margin-bottom: 15px;
            padding: 8px 12px;
            border-radius: 7.5px;
            position: relative;
            word-wrap: break-word;
            box-shadow: 0 1px 0.5px rgba(0,0,0,0.1);
        }
        
        .sent {
            align-self: flex-end;
            background-color: #dcf8c6;
        }
        
        .received {
            align-self: flex-start;
            background-color: #ffffff;
        }
        
        .message-time {
            font-size: 11px;
            color: #666;
            text-align: right;
            margin-top: 3px;
        }
        
        .status {
            width: 10px;
            height: 10px;
            border-radius: 50%;
            display: inline-block;
            margin-right: 5px;
        }
        
        .online {
            background: #4caf50;
            position: absolute;
        }
        
        .typing-indicator {
            font-size: 12px;
            color: #999;
            font-style: italic;
            margin-left: 10px;
            height: 20px;
        }
        
        .avatar {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            object-fit: cover;
        }
        
        .system-message {
            text-align: center;
            color: #666;
            font-size: 0.9em;
            margin: 10px 0;
            padding: 5px;
            background-color: #f0f0f0;
            border-radius: 5px;
        }
        
        .message-sender {
            font-weight: bold;
            font-size: 0.8em;
            margin-bottom: 3px;
            color: #555;
        }
        
        .sent .message-sender {
            text-align: right;
        }
        
        .received .message-sender {
            text-align: left;
        }
        
        .color-indicator {
            width: 12px;
            height: 12px;
            border-radius: 50%;
            display: inline-block;
            margin-right: 8px;
            border: 1px solid rgba(0,0,0,0.1);
        }
        
        .status.typing {
            background-color: #ffcc00;
            animation: pulse 1.5s infinite;
        }
        
        @keyframes pulse {
            0% { opacity: 1; }
            50% { opacity: 0.5; }
            100% { opacity: 1; }
        }
        .file-message:hover { background-color: #f8f9fa !important; }
        #filePreview { max-width: 100%; }
        video::-webkit-media-controls { border-radius: 0 0 8px 8px; }
        .file-preview-container { max-width: 200px; }
        
        /* Custom scrollbar */
        ::-webkit-scrollbar {
            width: 6px;
        }
        
        ::-webkit-scrollbar-track {
            background: #f1f1f1;
        }
        
        ::-webkit-scrollbar-thumb {
            background: #c1c1c1;
            border-radius: 3px;
        }
        
        ::-webkit-scrollbar-thumb:hover {
            background: #a8a8a8;
        }

           /* Medya Görüntüleme Stilleri */
    .media-container {
        max-width: 100%;
        margin-bottom: 8px;
        border-radius: 8px;
        overflow: hidden;
        cursor: pointer;
        transition: transform 0.2s;
    }
    
    .media-container:hover {
        transform: scale(1.02);
    }
    
    .img-preview {
        max-width: 100%;
        max-height: 300px;
        object-fit: contain;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }
    
    .video-preview {
        max-width: 100%;
        max-height: 300px;
        border-radius: 8px;
        background: #000;
    }
    
    .info-icon {
        display: inline-flex;
        width: 40px;
        height: 40px;
        border-radius: 50%;
        align-items: center;
        justify-content: center;
        font-weight: bold;
        font-family: Arial;
        font-size: 20px;
        cursor: pointer;
        transition: transform 0.2s;
        position: absolute;
        bottom:95px;
        left:110px;
        border: 2px solid var(--orange-1);  /* Çerçeve olarak */
        box-shadow: 0 0 0 3px var(--orange-3);  /* Dış glow efekti */
        --orange-1: #FFA726;  /* Google Material Orange 400 */
        --orange-2: #FF7043;  /* Daha kırmızimsi turuncu */
        --orange-3: #FFAB40;  /* Soft altın-turuncu */
    }
    .info-icon:hover {
        transform: scale(1.1);
    }

    /* MODAL STİLLERİ */
    .modal {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0,0,0,0.5);
        opacity: 0;
        transition: opacity 0.3s ease;
        z-index: 1000;
    }
    
    .modal.acik {
        opacity: 1;
    }
    
    .modal-icerik {
        background: white;
        margin: 10% auto;
        padding: 20px;
        width: 80%;
        max-width: 500px;
        border-radius: 8px;
        transform: translateY(-50px);
        transition: transform 0.3s ease;
        box-shadow: 0 5px 15px rgba(0,0,0,0.3);
    }
    
    .modal.acik .modal-icerik {
        transform: translateY(0);
    }
    
    .kapat {
        float: right;
        cursor: pointer;
        font-size: 24px;
        font-weight: bold;
        color: #aaa;
    }
    
    .kapat:hover {
        color: #333;
    }

    /* Progress bar stili */
.progress-container {
    display: none;
    margin-top: 10px;
    background: #e0e0e0;
    border-radius: 4px;
    height: 6px;
    overflow: hidden;
}

.progress-bar {
    height: 100%;
    background: linear-gradient(90deg, #4CAF50, #8BC34A);
    width: 0%;
    transition: width 0.3s ease;
}

.progress-text {
    font-size: 12px;
    text-align: center;
    margin-top: 3px;
    color: #666;
}

        /* Mobile cihazlarda çevrimiçi yazısını gizle */
  @media (max-width: 768px) {
        /* Progress bar mobil stil ayarları */
    .progress-container {
        margin-top: 8px;
        height: 5px; /* Mobilde daha ince */
    }
    .progress-container {
        margin-left: 10px;
        margin-right: 10px;
        height: 4px; /* Çok küçük ekranlarda */
    }
    
    .progress-text {
        display: none; /* Mobilde yüzde yazısını gizle (opsiyonel) */
    }
    .progress-text {
        font-size: 10px; /* Mobilde daha küçük yazı */
    }

    .user .text-muted.small {
      display: none !important;
    }
    .img-preview, .video-preview {
        max-height: 200px;
    }
    .info-icon {
        position: absolute;
        top:25px;
        left: 320px;
        z-index: 1;
    }
    .flex-grow-1 {
        margin-left: -10px;
        margin-right: 15px;
      }
      .badge {
        margin-left: 5px;
      }
    /* Kullanıcı listesinde avatar boyutunu küçült */
    .user .avatar {
      width: 32px;
      height: 32px;
    }
    
    /* Kullanıcı adı font boyutunu küçült */
    .user strong {
      font-size: 0.9em;
    }
  }

  /* MOBILE KULLANICI LİSTESİ STİLİ - ÜSTÜNE YAZ */
@media (max-width: 767.98px) {
    #userListSidebar {
      display: block !important;  
      position: fixed !important;
      top: 0 !important;
      left: -100% !important;
      width: 85% !important;
      height: 100vh !important;
      background: white !important;
      z-index: 2000 !important; /* Modal'dan (1000) daha yüksek */
      transition: left 0.4s ease !important;
      overflow-y: auto;
      box-shadow: 5px 0 15px rgba(0,0,0,0.2);
    }
  
    #userListSidebar.show {
      left: 0 !important;
    }
  
    .sidebar-overlay {
      display: none;
      position: fixed !important;
      top: 0 !important;
      left: 0 !important;
      right: 0 !important;
      bottom: 0 !important;
      background: rgba(0,0,0,0.5) !important;
      z-index: 1999 !important; /* Liste altında */
      cursor: pointer;
    }
  
    body.sidebar-open {
      overflow: hidden;
    }
    
    /* Buton pozisyonu */
    #toggleUserList {
      position: fixed;
      bottom: 20px;
      right: 20px;
      z-index: 100;
      width: 50px;
      height: 50px;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
    }
  }


    </style>
</head>
<body>
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <div class="chat-container d-flex">
                    <!-- Kullanıcı listesi (Mobilde gizli) -->
                    <div class="user-list col-md-4 p-0 d-none d-md-block" id="userListSidebar">
                        <div class="p-3 bg-primary text-white d-flex justify-content-between">
                            <h5 class="mb-0">Üyeler</h5>
                            <span id="onlineCount" class="badge bg-light text-dark">0</span>
                        </div>
                        <div id="userList"></div>
                    </div>
                    
                    <!-- Sohbet alanı (Mobilde tam genişlik) -->
                    <div class="chat-area col-12 col-md-8 p-0 d-flex flex-column">
                        <div class="p-3 bg-primary text-white d-flex justify-content-between align-items-center">
                            <!-- Mobilde kullanıcı listesi toggle butonu -->
                            <button id="toggleUserList" class="btn btn-primary d-md-none" style="
                                position: fixed;
                                bottom: 70px;
                                right: 20px;
                                z-index: 100;
                                width: 50px;
                                height: 50px;
                                border-radius: 50%;
                            ">
                                <i class="fas fa-users"></i>
                            </button>
                            <h5 class="mb-0 flex-grow-1" id="chatTitle">Genel Sohbet</h5>
                            <div class="info-icon" id="modalAc" style="
                                background: linear-gradient(135deg, #1e88e5, #0d47a1);
                                color: white;
                                box-shadow: 0 3px 10px rgba(30, 136, 229, 0.4);">
                                i
                            </div>
                            <div class="typing-indicator" id="typingIndicator"></div>
                        </div>
                        
                        <div class="messages" id="messages"></div>
                        
                        <div class="message-input">
                            <form id="messageForm" enctype="multipart/form-data">
                                <input type="file" id="fileInput" accept="image/*,video/*,.pdf,.gif" capture="environment" hidden>
                                <div class="input-group">
                                    <button type="button" id="attachBtn" class="btn btn-secondary">
                                        <i class="fas fa-paperclip"></i>
                                    </button>
                                    <input type="text" class="form-control" id="messageInput" placeholder="Bir mesaj yazın...">
                                    <button type="submit" class="btn btn-primary">
                                        <i class="fas fa-paper-plane"></i>
                                    </button>
                                </div>
                            </form>
                            <div id="filePreview" class="mt-2"></div>
                            <div class="progress-container" id="progressContainer">
                                <div class="progress-bar" id="progressBar"></div>
                                <div class="progress-text" id="progressText">0%</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <!-- Modal içeriği aynı kalıyor -->
    <div class="modal" id="benimModal">
        <div class="modal-icerik">
            <span class="kapat">&times;</span>
            <h2><i class="fas fa-info-circle"></i> Önemli Bilgi</h2>
            <p>Bu sohbet uygulaması <strong>konuşmaları kaydetmemektedir</strong>. Lütfen dikkat:</p>
            
            <ul style="margin-left: 20px; line-height: 1.6;">
                <li>Gönderdiğiniz tüm mesajlar <span style="color: #e53935;"><strong>kalıcı olarak saklanmaz</strong></span></li>
                <li>Çıkış yaptığınızda <strong>tüm sohbet geçmişi otomatik silinir</strong></li>
                <li>Önemli bilgileri <strong>başka bir yerde kaydetmenizi</strong> öneririz</li>
            </ul>
            
            <div style="background-color: #f8f9fa; padding: 15px; border-radius: 8px; margin-top: 20px; border-left: 4px solid #2196F3;">
                <p style="margin: 0;"><i class="fas fa-shield-alt"></i> <strong>Gizlilik:</strong> Bu uygulama anonim kullanım için tasarlanmıştır. Kimse mesajlarınızı göremez.</p>
            </div>
        </div>
    </div>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.socket.io/4.5.4/socket.io.min.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
$(document).ready(function() {
    // Socket.io bağlantısını güçlendir
    const socket = io({
        reconnection: true,
        reconnectionAttempts: 5,
        reconnectionDelay: 1000,
        transports: ['websocket']
    });

    let username = '';
    let isConnected = false;

    // Kullanıcı adını al
    function getUsername() {
        username = localStorage.getItem('chat-username') || '';
        while (!username || username.trim() === '') {
            username = prompt("Lütfen kullanıcı adınızı girin:") || '';
            if (username.trim()) {
                localStorage.setItem('chat-username', username.trim());
            }
        }
        return username.trim();
    }

    // Bağlantıyı başlat
    function connect() {
        if (isConnected) return;
        
        username = getUsername();
        socket.emit('new user', username);
        isConnected = true;
        
        // Bağlantı durumu kontrolü
        setInterval(() => {
            socket.emit('ping', () => {
                console.log('Bağlantı aktif');
            });
        }, 30000);
    }

    // DOSYA YÜKLEME FONKSİYONU (Yeni eklendi)
    // uploadFile fonksiyonunu güncelleyin
async function uploadFile(file) {
    const formData = new FormData();
    formData.append('file', file);
    
    // Progress bar'ı göster ve sıfırla
    $('#progressContainer').show();
    $('#progressBar').css('width', '0%');
    $('#progressText').text('0%');
    
    // Socket ID'sini header'a ekle
    const headers = {
      'X-Socket-ID': socket.id
    };
    
    try {
        const response = await fetch('/upload', {
            method: 'POST',
            body: formData,
            headers
        });
        
        // Yükleme tamamlandığında progress bar'ı gizle
        $('#progressContainer').hide();
        return await response.json();
    } catch (err) {
        console.error('Yükleme hatası:', err);
        $('#progressContainer').hide();
        return null;
    }
}

// Socket.io'da progress olayını dinle
socket.on('upload-progress', (data) => {
    $('#progressBar').css('width', `${data.percent}%`);
    $('#progressText').text(`${data.percent}%`);
});

    // MESAJ GÖNDERME (Güncellendi)
    async function sendMessage() {
        const message = $('#messageInput').val().trim();
        const fileInput = $('#fileInput')[0];
        
        
        if (fileInput.files.length > 0) {
            const file = fileInput.files[0];
            
            // Dosya boyut kontrolü (50MB)
            if (file.size > 50 * 1024 * 1024) {
                alert('Dosya boyutu 50MB\'ı aşamaz!');
                return;
            }
            
            const { url, type } = await uploadFile(file);
            if (url) {
                socket.emit('chat message', {
                    message,
                    file: { url, type },
                    timestamp: new Date().toISOString()
                });
                $('#fileInput').val('');
                $('#filePreview').empty();
            }
        } else if (message) {
            socket.emit('chat message', { 
                message,
                timestamp: new Date().toISOString()
            });
        }
        
        $('#messageInput').val('');
        socket.emit('stop typing');
    }

    $(document).on('change', '#fileInput', function() {
        const isMobile = window.innerWidth <= 768;
        const file = this.files[0];
        
        if (isMobile) {
            // Mobilde sadece dosya adını göster
            $('#filePreview').html(`
                <div class="alert alert-light p-1 small">
                    <i class="fas fa-file me-1"></i>
                    ${file.name.substring(0, 20)}...
                </div>
            `);
        } else {
            // Normal görünüm
            $('#filePreview').html(`
                <div class="alert alert-light d-flex justify-content-between align-items-center p-2">
                    <div>
                        <i class="fas fa-${file.type.includes('image') ? 'image' : 'file'} me-2"></i>
                        ${file.name} (${(file.size / 1024).toFixed(1)}KB)
                    </div>
                    <button class="btn btn-sm btn-danger" id="removeFile">
                        <i class="fas fa-times"></i>
                    </button>
                </div>
            `);
        }
    });

    // DOSYA ÖNİZLEME (Yeni eklendi)
    $('#attachBtn').click(() => $('#fileInput').click());
    
    $('#fileInput').change(function() {
        const file = this.files[0];
        if (!file) return;
        
        const preview = `
            <div class="alert alert-light d-flex justify-content-between align-items-center p-2">
                <div>
                    <i class="fas fa-${file.type.includes('image') ? 'image' : 
                                    file.type.includes('video') ? 'video' : 'file'} me-2"></i>
                    ${file.name} (${(file.size / 1024).toFixed(1)}KB)
                </div>
                <button class="btn btn-sm btn-danger" id="removeFile">
                    <i class="fas fa-times"></i>
                </button>
            </div>
        `;
        $('#filePreview').html(preview);
    });

    $(document).on('click', '#removeFile', () => {
        $('#fileInput').val('');
        $('#filePreview').empty();
        $('#progressContainer').hide(); // Progress bar'ı gizle
    });



    // Yazma durumu
    let typing = false;
    let typingTimeout;
    
    $('#messageInput').on('input', function() {
        if (!isConnected) return;
        
        if (!typing) {
            typing = true;
            socket.emit('typing');
        }
        
        clearTimeout(typingTimeout);
        typingTimeout = setTimeout(() => {
            typing = false;
            socket.emit('stop typing');
        }, 2000);
    });

    $('#messageForm').submit(function(e) {
        e.preventDefault();
        sendMessage();
    });
    // Enter tuşu ile gönder
    $('#messageInput').keypress(function(e) {
        if (e.which === 13) {
            e.preventDefault();
            sendMessage();
        }
    });

    $('#sendButton').click(sendMessage);

    // Socket.io olayları
    socket.on('user list', function(users) {
        $('#userList').empty();
        $('#onlineCount').text(users.length);
        
        const isMobile = window.innerWidth <= 768;
        
        users.forEach(user => {
          const isCurrentUser = user.username === username;
          const typingText = user.typing ? ' (yazıyor...)' : '';
          
          $('#userList').append(`
            <div class="user ${isCurrentUser ? 'active' : ''}" data-user-id="${user.id}">
              <div class="d-flex align-items-center">
                <div class="color-indicator" style="background-color: ${user.color || '#cccccc'};"></div>
                <img src="https://ui-avatars.com/api/?name=${encodeURIComponent(user.username)}&background=random" 
                     class="avatar me-3" alt="${user.username}">
                <div class="flex-grow-1">
                  <strong>${user.username}</strong>
                  ${!isMobile ? `<div class="text-muted small">${typingText || 'Çevrimiçi'}</div>` : ''}
                </div>
                <span class="status ${user.typing ? 'typing' : 'online'}"></span>
              </div>
            </div>
          `);
        });
      });
      
      // Ekran boyutu değiştiğinde yenile
      $(window).resize(function() {
        if(this.resizeTO) clearTimeout(this.resizeTO);
        this.resizeTO = setTimeout(function() {
          socket.emit('get user list');
        }, 300);
      });

     // MESAJ ALMA (Güncellendi)
     socket.on('chat message', (data) => {
        let content = '';
        
        // Dosya varsa uygun şekilde render et
        if (data.file) {
            const fileType = data.file.type || data.file.url.split('.').pop().toLowerCase();
            
            // Resim/GIF için optimize edilmiş görüntüleme
            if (fileType.includes('image')) {
                content = `
                <div class="media-container">
                    <img src="${data.file.url}" 
                         class="img-preview" 
                         alt="Gönderilen resim"
                         onclick="openMediaModal('${data.file.url}', 'image')">
                </div>`;
            }
            // Video için optimize oynatıcı
            else if (fileType.includes('video')) {
                content = `
                <div class="media-container">
                    <video controls class="video-preview" onclick="event.stopPropagation()">
                        <source src="${data.file.url}" type="video/mp4">
                        Tarayıcınız video oynatmayı desteklemiyor.
                    </video>
                </div>`;
            }
            // Diğer dosyalar
            else {
                content = `
                <div class="file-message bg-light p-2 rounded mb-2">
                    <a href="${data.file.url}" target="_blank" class="text-decoration-none">
                        <i class="fas fa-file-download me-2"></i>Dosyayı indir
                    </a>
                </div>`;
            }
        }
        
        // Metin mesajı varsa ekle
        if (data.message) {
            content += `<div class="message-text mt-2">${data.message}</div>`;
        }
    
        addMessage(data.username, content, data.userId === socket.id, data.timestamp, data.color);
    });



    socket.on('typing', function(typingUser) {
        if (typingUser !== username) {
            $('#typingIndicator').text(`${typingUser} yazıyor...`);
        }
    });

    socket.on('stop typing', function() {
        $('#typingIndicator').text('');
    });

    socket.on('system message', function(data) {
        addSystemMessage(data.text, data.type);
    });

    socket.on('connect_error', (error) => {
        console.error('Bağlantı hatası:', error);
        addSystemMessage('Sunucuya bağlanılamıyor. Lütfen sayfayı yenileyin...', 'error');
    });

     // Mesaj ekleme fonksiyonu (Güncellendi)
     function addMessage(sender, content, isSent, timestamp, color) {
        const time = timestamp ? new Date(timestamp).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }) : 
                                new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });
        
        const messageClass = isSent ? 'sent' : 'received';
        const messageColor = isSent ? '#dcf8c6' : (color || '#ffffff');
        
        $('#messages').append(`
            <div class="message ${messageClass}" style="background-color: ${messageColor}">
                <div class="message-sender">${sender}</div>
                ${content}
                <div class="message-time">${time}</div>
            </div>
        `);
        
        scrollToBottom();
    }
    

    function addSystemMessage(text, type) {
        $('#messages').append(`
            <div class="system-message ${type}">
                ${text}
            </div>
        `);
        scrollToBottom();
    }

    function scrollToBottom() {
        const messages = $('#messages')[0];
        messages.scrollTop = messages.scrollHeight;
    }

    // Sayfa yüklendiğinde bağlan
    connect();
});

//====================MODAL SCRIPT=============
// MODAL AÇMA
document.getElementById("modalAc").addEventListener("click", function() {
    const modal = document.getElementById("benimModal");
    modal.style.display = "block";
    setTimeout(() => {
        modal.classList.add("acik");
    }, 10);
});

// MODAL KAPATMA FONKSİYONU
function modalKapat() {
    const modal = document.getElementById("benimModal");
    modal.classList.remove("acik");
    setTimeout(() => {
        modal.style.display = "none";
    }, 300);
}

// KAPAT BUTONU
document.querySelector(".kapat").addEventListener("click", modalKapat);

// DIŞARI TIKLAYINCA KAPAT
window.addEventListener("click", function(event) {
    if (event.target == document.getElementById("benimModal")) {
        modalKapat();
    }
});

// ÜYE TOGGLE KODU
document.addEventListener('DOMContentLoaded', function() {
    const toggleBtn = $('#toggleUserList');
    const userList = $('#userListSidebar');
    
    // Overlay oluştur
    const overlay = $('<div class="sidebar-overlay"></div>');
    $('body').append(overlay);
  
    toggleBtn.on('click', function() {
      userList.toggleClass('show');
      overlay.css('display', userList.hasClass('show') ? 'block' : 'none');
      $('body').toggleClass('sidebar-open');
      
      // Debug
      console.log("Toggle Durumu:", {
        showClass: userList.hasClass('show'),
        overlayDisplay: overlay.css('display')
      });
    });
  
    overlay.on('click', function() {
      userList.removeClass('show');
      overlay.css('display', 'none');
      $('body').removeClass('sidebar-open');
    });
  
    $(document).on('keydown', function(e) {
      if (e.key === 'Escape') {
        userList.removeClass('show');
        overlay.css('display', 'none');
      }
    });
  });
</script>
</body>
</html>